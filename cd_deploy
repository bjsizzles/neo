.
---
- name: Parse user-provided config file
  set_fact:
    user_config_lines: "{{ user_config_content.content | b64decode | regex_replace('\\r\\n|\\r|\\n', '\n') | split('\n')  }}"
  when: user_config_file_status.stat.exists

- name: Find, backup, and update neo4j.conf configuration file
  hosts: your_target_host
  become: yes
  vars:
    user_config_path: /tmp/user_config_file
    backup_dir: /tmp
    artifactory_url: "https://artifactory.example.com/artifactory/path/to/backup"
    artifactory_username: "your_username"
    artifactory_password: "your_password"
  tasks:
    - name: Check if the user-provided config file exists
      stat:
        path: "{{ user_config_path }}"
      register: user_config_file_status

    - name: Copy the user-provided config file to the server
      copy:
        src: /local/path/to/user_config_file
        dest: "{{ user_config_path }}"
      when: user_config_file_status.stat.exists

    - name: Find the neo4j.conf file in /etc/neo4j or install_location/etc/neo4j
      find:
        paths: >
          {%- set paths = ['/etc/neo4j/'] -%}
          {%- if install_location is defined -%}
            {%- do paths.append(install_location ~ '/etc/neo4j/') -%}
          {%- endif -%}
          {{ paths }}
        patterns: 'neo4j.conf'
      register: neo4j_conf_files
      when: user_config_file_status.stat.exists

    - name: Ensure a neo4j.conf file is found
      assert:
        that:
          - neo4j_conf_files.matched > 0
        fail_msg: "No neo4j.conf file found in specified locations."
      when: user_config_file_status.stat.exists

    - name: Set the path to the neo4j.conf file
      set_fact:
        neo4j_conf_path: "{{ neo4j_conf_files.files[0].path }}"
      when: user_config_file_status.stat.exists

    - name: Create a backup of the neo4j.conf file
      copy:
        src: "{{ neo4j_conf_path }}"
        dest: "{{ backup_dir }}/neo4j_conf_backup_{{ ansible_date_time.iso8601 }}.bak"
        backup: yes
      when: user_config_file_status.stat.exists

    - name: Upload backup to Artifactory
      uri:
        url: "{{ artifactory_url }}/neo4j_conf_backup_{{ ansible_date_time.iso8601 }}.bak"
        method: PUT
        user: "{{ artifactory_username }}"
        password: "{{ artifactory_password }}"
        force_basic_auth: yes
        src: "{{ backup_dir }}/neo4j_conf_backup_{{ ansible_date_time.iso8601 }}.bak"
        status_code: 201
      when: user_config_file_status.stat.exists

    - name: Read the user-provided config file
      slurp:
        src: "{{ user_config_path }}"
      register: user_config_content
      when: user_config_file_status.stat.exists

    - name: Parse user-provided config file
      set_fact:
        user_config_lines: "{{ user_config_content.content | b64decode | splitlines }}"
      when: user_config_file_status.stat.exists

    - name: Ensure user inputs are in the neo4j.conf file
      lineinfile:
        path: "{{ neo4j_conf_path }}"
        regexp: '^{{ item.split('=')[0] }}='
        line: "{{ item }}"
        state: present
      loop: "{{ user_config_lines }}"
      when: user_config_file_status.stat.exists

    - name: Save the path of neo4j.conf file
      set_fact:
        neo4j_conf_file_path: "{{ neo4j_conf_path }}"
      when: user_config_file_status.stat.exists

    - name: Find the neo4j.conf file in /etc/neo4j or install_location/etc/neo4j
      find:
        paths:
          - /etc/neo4j/
          - "{{ install_location }}/etc/neo4j/"
        patterns: 'neo4j.conf'
      register: neo4j_conf_files
      when: user_config_file_status.stat.exists
